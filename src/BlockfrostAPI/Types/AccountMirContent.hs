-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema AccountMirContent
module BlockfrostAPI.Types.AccountMirContent where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.account_mir_content@ in the specification.
-- 
-- 
data AccountMirContent = AccountMirContent {
  -- | amount: MIR amount in Lovelaces
  accountMirContentAmount :: Data.Text.Internal.Text
  -- | tx_hash: Hash of the transaction containing the MIR
  , accountMirContentTxHash :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON AccountMirContent
    where toJSON obj = Data.Aeson.Types.Internal.object ("amount" Data.Aeson.Types.ToJSON..= accountMirContentAmount obj : "tx_hash" Data.Aeson.Types.ToJSON..= accountMirContentTxHash obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amount" Data.Aeson.Types.ToJSON..= accountMirContentAmount obj) GHC.Base.<> ("tx_hash" Data.Aeson.Types.ToJSON..= accountMirContentTxHash obj))
instance Data.Aeson.Types.FromJSON.FromJSON AccountMirContent
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "AccountMirContent" (\obj -> (GHC.Base.pure AccountMirContent GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tx_hash"))
-- | Create a new 'AccountMirContent' with all required fields.
mkAccountMirContent :: Data.Text.Internal.Text -- ^ 'accountMirContentAmount'
  -> Data.Text.Internal.Text -- ^ 'accountMirContentTxHash'
  -> AccountMirContent
mkAccountMirContent accountMirContentAmount accountMirContentTxHash = AccountMirContent{accountMirContentAmount = accountMirContentAmount,
                                                                                        accountMirContentTxHash = accountMirContentTxHash}
