-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema NutlinkTickersTicker
module BlockfrostAPI.Types.NutlinkTickersTicker where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.nutlink_tickers_ticker@ in the specification.
-- 
-- 
data NutlinkTickersTicker = NutlinkTickersTicker {
  -- | address: Address of a metadata oracle
  nutlinkTickersTickerAddress :: Data.Text.Internal.Text
  -- | block_height: Block height of the record
  , nutlinkTickersTickerBlockHeight :: GHC.Integer.Type.Integer
  -- | payload: Content of the ticker
  , nutlinkTickersTickerPayload :: NutlinkTickersTickerPayload'Variants
  -- | tx_hash: Hash of the transaction
  , nutlinkTickersTickerTxHash :: Data.Text.Internal.Text
  -- | tx_index: Transaction index within the block
  , nutlinkTickersTickerTxIndex :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON NutlinkTickersTicker
    where toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerAddress obj : "block_height" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerBlockHeight obj : "payload" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerPayload obj : "tx_hash" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerTxHash obj : "tx_index" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerTxIndex obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerAddress obj) GHC.Base.<> (("block_height" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerBlockHeight obj) GHC.Base.<> (("payload" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerPayload obj) GHC.Base.<> (("tx_hash" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerTxHash obj) GHC.Base.<> ("tx_index" Data.Aeson.Types.ToJSON..= nutlinkTickersTickerTxIndex obj)))))
instance Data.Aeson.Types.FromJSON.FromJSON NutlinkTickersTicker
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "NutlinkTickersTicker" (\obj -> ((((GHC.Base.pure NutlinkTickersTicker GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "block_height")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payload")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tx_hash")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tx_index"))
-- | Create a new 'NutlinkTickersTicker' with all required fields.
mkNutlinkTickersTicker :: Data.Text.Internal.Text -- ^ 'nutlinkTickersTickerAddress'
  -> GHC.Integer.Type.Integer -- ^ 'nutlinkTickersTickerBlockHeight'
  -> NutlinkTickersTickerPayload'Variants -- ^ 'nutlinkTickersTickerPayload'
  -> Data.Text.Internal.Text -- ^ 'nutlinkTickersTickerTxHash'
  -> GHC.Integer.Type.Integer -- ^ 'nutlinkTickersTickerTxIndex'
  -> NutlinkTickersTicker
mkNutlinkTickersTicker nutlinkTickersTickerAddress nutlinkTickersTickerBlockHeight nutlinkTickersTickerPayload nutlinkTickersTickerTxHash nutlinkTickersTickerTxIndex = NutlinkTickersTicker{nutlinkTickersTickerAddress = nutlinkTickersTickerAddress,
                                                                                                                                                                                             nutlinkTickersTickerBlockHeight = nutlinkTickersTickerBlockHeight,
                                                                                                                                                                                             nutlinkTickersTickerPayload = nutlinkTickersTickerPayload,
                                                                                                                                                                                             nutlinkTickersTickerTxHash = nutlinkTickersTickerTxHash,
                                                                                                                                                                                             nutlinkTickersTickerTxIndex = nutlinkTickersTickerTxIndex}
-- | Defines the oneOf schema located at @components.schemas.nutlink_tickers_ticker.properties.payload.anyOf@ in the specification.
-- 
-- Content of the ticker
data NutlinkTickersTickerPayload'Variants =
   NutlinkTickersTickerPayload'Text Data.Text.Internal.Text
  | NutlinkTickersTickerPayload'Object Data.Aeson.Types.Internal.Object
  | NutlinkTickersTickerPayload'ListTObject ([Data.Aeson.Types.Internal.Object])
  | NutlinkTickersTickerPayload'Integer GHC.Integer.Type.Integer
  | NutlinkTickersTickerPayload'Scientific Data.Scientific.Scientific
  | NutlinkTickersTickerPayload'Bool GHC.Types.Bool
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON NutlinkTickersTickerPayload'Variants
    where toJSON (NutlinkTickersTickerPayload'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (NutlinkTickersTickerPayload'Object a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (NutlinkTickersTickerPayload'ListTObject a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (NutlinkTickersTickerPayload'Integer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (NutlinkTickersTickerPayload'Scientific a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (NutlinkTickersTickerPayload'Bool a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON NutlinkTickersTickerPayload'Variants
    where parseJSON val = case (NutlinkTickersTickerPayload'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((NutlinkTickersTickerPayload'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((NutlinkTickersTickerPayload'ListTObject Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((NutlinkTickersTickerPayload'Integer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((NutlinkTickersTickerPayload'Scientific Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((NutlinkTickersTickerPayload'Bool Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched"))))) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
