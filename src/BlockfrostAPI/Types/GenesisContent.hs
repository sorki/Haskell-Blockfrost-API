-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema GenesisContent
module BlockfrostAPI.Types.GenesisContent where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.genesis_content@ in the specification.
-- 
-- 
data GenesisContent = GenesisContent {
  -- | active_slots_coefficient: The proportion of slots in which blocks should be issued
  genesisContentActiveSlotsCoefficient :: Data.Scientific.Scientific
  -- | epoch_length: Number of slots in an epoch
  , genesisContentEpochLength :: GHC.Integer.Type.Integer
  -- | max_kes_evolutions: The maximum number of time a KES key can be evolved before a pool operator must create a new operational certificate
  , genesisContentMaxKesEvolutions :: GHC.Integer.Type.Integer
  -- | max_lovelace_supply: The total number of lovelace in the system
  , genesisContentMaxLovelaceSupply :: Data.Text.Internal.Text
  -- | network_magic: Network identifier
  , genesisContentNetworkMagic :: GHC.Integer.Type.Integer
  -- | security_param: Security parameter k
  , genesisContentSecurityParam :: GHC.Integer.Type.Integer
  -- | slot_length: Duration of one slot in seconds
  , genesisContentSlotLength :: GHC.Integer.Type.Integer
  -- | slots_per_kes_period: Number of slots in an KES period
  , genesisContentSlotsPerKesPeriod :: GHC.Integer.Type.Integer
  -- | system_start: Time of slot 0 in UNIX time
  , genesisContentSystemStart :: GHC.Integer.Type.Integer
  -- | update_quorum: Determines the quorum needed for votes on the protocol parameter updates
  , genesisContentUpdateQuorum :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GenesisContent
    where toJSON obj = Data.Aeson.Types.Internal.object ("active_slots_coefficient" Data.Aeson.Types.ToJSON..= genesisContentActiveSlotsCoefficient obj : "epoch_length" Data.Aeson.Types.ToJSON..= genesisContentEpochLength obj : "max_kes_evolutions" Data.Aeson.Types.ToJSON..= genesisContentMaxKesEvolutions obj : "max_lovelace_supply" Data.Aeson.Types.ToJSON..= genesisContentMaxLovelaceSupply obj : "network_magic" Data.Aeson.Types.ToJSON..= genesisContentNetworkMagic obj : "security_param" Data.Aeson.Types.ToJSON..= genesisContentSecurityParam obj : "slot_length" Data.Aeson.Types.ToJSON..= genesisContentSlotLength obj : "slots_per_kes_period" Data.Aeson.Types.ToJSON..= genesisContentSlotsPerKesPeriod obj : "system_start" Data.Aeson.Types.ToJSON..= genesisContentSystemStart obj : "update_quorum" Data.Aeson.Types.ToJSON..= genesisContentUpdateQuorum obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("active_slots_coefficient" Data.Aeson.Types.ToJSON..= genesisContentActiveSlotsCoefficient obj) GHC.Base.<> (("epoch_length" Data.Aeson.Types.ToJSON..= genesisContentEpochLength obj) GHC.Base.<> (("max_kes_evolutions" Data.Aeson.Types.ToJSON..= genesisContentMaxKesEvolutions obj) GHC.Base.<> (("max_lovelace_supply" Data.Aeson.Types.ToJSON..= genesisContentMaxLovelaceSupply obj) GHC.Base.<> (("network_magic" Data.Aeson.Types.ToJSON..= genesisContentNetworkMagic obj) GHC.Base.<> (("security_param" Data.Aeson.Types.ToJSON..= genesisContentSecurityParam obj) GHC.Base.<> (("slot_length" Data.Aeson.Types.ToJSON..= genesisContentSlotLength obj) GHC.Base.<> (("slots_per_kes_period" Data.Aeson.Types.ToJSON..= genesisContentSlotsPerKesPeriod obj) GHC.Base.<> (("system_start" Data.Aeson.Types.ToJSON..= genesisContentSystemStart obj) GHC.Base.<> ("update_quorum" Data.Aeson.Types.ToJSON..= genesisContentUpdateQuorum obj))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON GenesisContent
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GenesisContent" (\obj -> (((((((((GHC.Base.pure GenesisContent GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active_slots_coefficient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "epoch_length")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "max_kes_evolutions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "max_lovelace_supply")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network_magic")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "security_param")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slot_length")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slots_per_kes_period")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "system_start")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "update_quorum"))
-- | Create a new 'GenesisContent' with all required fields.
mkGenesisContent :: Data.Scientific.Scientific -- ^ 'genesisContentActiveSlotsCoefficient'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentEpochLength'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentMaxKesEvolutions'
  -> Data.Text.Internal.Text -- ^ 'genesisContentMaxLovelaceSupply'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentNetworkMagic'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentSecurityParam'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentSlotLength'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentSlotsPerKesPeriod'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentSystemStart'
  -> GHC.Integer.Type.Integer -- ^ 'genesisContentUpdateQuorum'
  -> GenesisContent
mkGenesisContent genesisContentActiveSlotsCoefficient genesisContentEpochLength genesisContentMaxKesEvolutions genesisContentMaxLovelaceSupply genesisContentNetworkMagic genesisContentSecurityParam genesisContentSlotLength genesisContentSlotsPerKesPeriod genesisContentSystemStart genesisContentUpdateQuorum = GenesisContent{genesisContentActiveSlotsCoefficient = genesisContentActiveSlotsCoefficient,
                                                                                                                                                                                                                                                                                                                                     genesisContentEpochLength = genesisContentEpochLength,
                                                                                                                                                                                                                                                                                                                                     genesisContentMaxKesEvolutions = genesisContentMaxKesEvolutions,
                                                                                                                                                                                                                                                                                                                                     genesisContentMaxLovelaceSupply = genesisContentMaxLovelaceSupply,
                                                                                                                                                                                                                                                                                                                                     genesisContentNetworkMagic = genesisContentNetworkMagic,
                                                                                                                                                                                                                                                                                                                                     genesisContentSecurityParam = genesisContentSecurityParam,
                                                                                                                                                                                                                                                                                                                                     genesisContentSlotLength = genesisContentSlotLength,
                                                                                                                                                                                                                                                                                                                                     genesisContentSlotsPerKesPeriod = genesisContentSlotsPerKesPeriod,
                                                                                                                                                                                                                                                                                                                                     genesisContentSystemStart = genesisContentSystemStart,
                                                                                                                                                                                                                                                                                                                                     genesisContentUpdateQuorum = genesisContentUpdateQuorum}
