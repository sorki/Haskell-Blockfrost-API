-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TxMetadataLabels
module BlockfrostAPI.Types.TxMetadataLabels where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.tx_metadata_labels.items@ in the specification.
-- 
-- 
data TxMetadataLabels = TxMetadataLabels {
  -- | cip10: CIP10 defined description
  txMetadataLabelsCip10 :: Data.Text.Internal.Text
  -- | count: The count of metadata entries with a specific label
  , txMetadataLabelsCount :: Data.Text.Internal.Text
  -- | label: Metadata label
  , txMetadataLabelsLabel :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TxMetadataLabels
    where toJSON obj = Data.Aeson.Types.Internal.object ("cip10" Data.Aeson.Types.ToJSON..= txMetadataLabelsCip10 obj : "count" Data.Aeson.Types.ToJSON..= txMetadataLabelsCount obj : "label" Data.Aeson.Types.ToJSON..= txMetadataLabelsLabel obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("cip10" Data.Aeson.Types.ToJSON..= txMetadataLabelsCip10 obj) GHC.Base.<> (("count" Data.Aeson.Types.ToJSON..= txMetadataLabelsCount obj) GHC.Base.<> ("label" Data.Aeson.Types.ToJSON..= txMetadataLabelsLabel obj)))
instance Data.Aeson.Types.FromJSON.FromJSON TxMetadataLabels
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "TxMetadataLabels" (\obj -> ((GHC.Base.pure TxMetadataLabels GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cip10")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "label"))
-- | Create a new 'TxMetadataLabels' with all required fields.
mkTxMetadataLabels :: Data.Text.Internal.Text -- ^ 'txMetadataLabelsCip10'
  -> Data.Text.Internal.Text -- ^ 'txMetadataLabelsCount'
  -> Data.Text.Internal.Text -- ^ 'txMetadataLabelsLabel'
  -> TxMetadataLabels
mkTxMetadataLabels txMetadataLabelsCip10 txMetadataLabelsCount txMetadataLabelsLabel = TxMetadataLabels{txMetadataLabelsCip10 = txMetadataLabelsCip10,
                                                                                                        txMetadataLabelsCount = txMetadataLabelsCount,
                                                                                                        txMetadataLabelsLabel = txMetadataLabelsLabel}
-- | Defines an alias for the schema located at @components.schemas.tx_metadata_labels@ in the specification.
-- 
-- 
-- XXX: collision
-- type TxMetadataLabels = [TxMetadataLabels]
type TxMetadataLabels' = [TxMetadataLabels]
