-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TxContentDelegations
module BlockfrostAPI.Types.TxContentDelegations where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.tx_content_delegations.items@ in the specification.
-- 
-- 
data TxContentDelegations = TxContentDelegations {
  -- | active_epoch: Epoch in which the delegation becomes active
  txContentDelegationsActiveEpoch :: GHC.Integer.Type.Integer
  -- | address: Bech32 delegation stake address
  , txContentDelegationsAddress :: Data.Text.Internal.Text
  -- | cert_index: Index of the certificate within the transaction
  , txContentDelegationsCertIndex :: GHC.Integer.Type.Integer
  -- | index: Index of the certificate within the transaction
  , txContentDelegationsIndex :: GHC.Integer.Type.Integer
  -- | pool_id: Bech32 ID of delegated stake pool
  , txContentDelegationsPoolId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TxContentDelegations
    where toJSON obj = Data.Aeson.Types.Internal.object ("active_epoch" Data.Aeson.Types.ToJSON..= txContentDelegationsActiveEpoch obj : "address" Data.Aeson.Types.ToJSON..= txContentDelegationsAddress obj : "cert_index" Data.Aeson.Types.ToJSON..= txContentDelegationsCertIndex obj : "index" Data.Aeson.Types.ToJSON..= txContentDelegationsIndex obj : "pool_id" Data.Aeson.Types.ToJSON..= txContentDelegationsPoolId obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("active_epoch" Data.Aeson.Types.ToJSON..= txContentDelegationsActiveEpoch obj) GHC.Base.<> (("address" Data.Aeson.Types.ToJSON..= txContentDelegationsAddress obj) GHC.Base.<> (("cert_index" Data.Aeson.Types.ToJSON..= txContentDelegationsCertIndex obj) GHC.Base.<> (("index" Data.Aeson.Types.ToJSON..= txContentDelegationsIndex obj) GHC.Base.<> ("pool_id" Data.Aeson.Types.ToJSON..= txContentDelegationsPoolId obj)))))
instance Data.Aeson.Types.FromJSON.FromJSON TxContentDelegations
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "TxContentDelegations" (\obj -> ((((GHC.Base.pure TxContentDelegations GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active_epoch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cert_index")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "index")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pool_id"))
-- | Create a new 'TxContentDelegations' with all required fields.
mkTxContentDelegations :: GHC.Integer.Type.Integer -- ^ 'txContentDelegationsActiveEpoch'
  -> Data.Text.Internal.Text -- ^ 'txContentDelegationsAddress'
  -> GHC.Integer.Type.Integer -- ^ 'txContentDelegationsCertIndex'
  -> GHC.Integer.Type.Integer -- ^ 'txContentDelegationsIndex'
  -> Data.Text.Internal.Text -- ^ 'txContentDelegationsPoolId'
  -> TxContentDelegations
mkTxContentDelegations txContentDelegationsActiveEpoch txContentDelegationsAddress txContentDelegationsCertIndex txContentDelegationsIndex txContentDelegationsPoolId = TxContentDelegations{txContentDelegationsActiveEpoch = txContentDelegationsActiveEpoch,
                                                                                                                                                                                             txContentDelegationsAddress = txContentDelegationsAddress,
                                                                                                                                                                                             txContentDelegationsCertIndex = txContentDelegationsCertIndex,
                                                                                                                                                                                             txContentDelegationsIndex = txContentDelegationsIndex,
                                                                                                                                                                                             txContentDelegationsPoolId = txContentDelegationsPoolId}
-- | Defines an alias for the schema located at @components.schemas.tx_content_delegations@ in the specification.
-- 
-- 
-- XXX: collision
-- type TxContentDelegations = [TxContentDelegations]
type TxContentDelegations' = [TxContentDelegations]
