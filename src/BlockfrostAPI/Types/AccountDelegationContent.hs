-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema AccountDelegationContent
module BlockfrostAPI.Types.AccountDelegationContent where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.account_delegation_content.items@ in the specification.
-- 
-- 
data AccountDelegationContent = AccountDelegationContent {
  -- | active_epoch: Epoch in which the delegation becomes active
  accountDelegationContentActiveEpoch :: GHC.Integer.Type.Integer
  -- | amount: Rewards for given epoch in Lovelaces
  , accountDelegationContentAmount :: Data.Text.Internal.Text
  -- | pool_id: Bech32 ID of pool being delegated to
  , accountDelegationContentPoolId :: Data.Text.Internal.Text
  -- | tx_hash: Hash of the transaction containing the delegation
  , accountDelegationContentTxHash :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON AccountDelegationContent
    where toJSON obj = Data.Aeson.Types.Internal.object ("active_epoch" Data.Aeson.Types.ToJSON..= accountDelegationContentActiveEpoch obj : "amount" Data.Aeson.Types.ToJSON..= accountDelegationContentAmount obj : "pool_id" Data.Aeson.Types.ToJSON..= accountDelegationContentPoolId obj : "tx_hash" Data.Aeson.Types.ToJSON..= accountDelegationContentTxHash obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("active_epoch" Data.Aeson.Types.ToJSON..= accountDelegationContentActiveEpoch obj) GHC.Base.<> (("amount" Data.Aeson.Types.ToJSON..= accountDelegationContentAmount obj) GHC.Base.<> (("pool_id" Data.Aeson.Types.ToJSON..= accountDelegationContentPoolId obj) GHC.Base.<> ("tx_hash" Data.Aeson.Types.ToJSON..= accountDelegationContentTxHash obj))))
instance Data.Aeson.Types.FromJSON.FromJSON AccountDelegationContent
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "AccountDelegationContent" (\obj -> (((GHC.Base.pure AccountDelegationContent GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active_epoch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pool_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tx_hash"))
-- | Create a new 'AccountDelegationContent' with all required fields.
mkAccountDelegationContent :: GHC.Integer.Type.Integer -- ^ 'accountDelegationContentActiveEpoch'
  -> Data.Text.Internal.Text -- ^ 'accountDelegationContentAmount'
  -> Data.Text.Internal.Text -- ^ 'accountDelegationContentPoolId'
  -> Data.Text.Internal.Text -- ^ 'accountDelegationContentTxHash'
  -> AccountDelegationContent
mkAccountDelegationContent accountDelegationContentActiveEpoch accountDelegationContentAmount accountDelegationContentPoolId accountDelegationContentTxHash = AccountDelegationContent{accountDelegationContentActiveEpoch = accountDelegationContentActiveEpoch,
                                                                                                                                                                                       accountDelegationContentAmount = accountDelegationContentAmount,
                                                                                                                                                                                       accountDelegationContentPoolId = accountDelegationContentPoolId,
                                                                                                                                                                                       accountDelegationContentTxHash = accountDelegationContentTxHash}
-- | Defines an alias for the schema located at @components.schemas.account_delegation_content@ in the specification.
-- 
-- 
-- XXX: collision
-- type AccountDelegationContent = [AccountDelegationContent]
type AccountDelegationContent' = [AccountDelegationContent]
