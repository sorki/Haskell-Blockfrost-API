-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema NutlinkAddress
module BlockfrostAPI.Types.NutlinkAddress where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.nutlink_address@ in the specification.
-- 
-- 
data NutlinkAddress = NutlinkAddress {
  -- | address: Bech32 encoded address
  nutlinkAddressAddress :: Data.Text.Internal.Text
  -- | metadata: The cached metadata of the \`metadata_url\` file.
  , nutlinkAddressMetadata :: Data.Aeson.Types.Internal.Object
  -- | metadata_hash: Hash of the metadata file
  , nutlinkAddressMetadataHash :: Data.Text.Internal.Text
  -- | metadata_url: URL do specific metadata file
  , nutlinkAddressMetadataUrl :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON NutlinkAddress
    where toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= nutlinkAddressAddress obj : "metadata" Data.Aeson.Types.ToJSON..= nutlinkAddressMetadata obj : "metadata_hash" Data.Aeson.Types.ToJSON..= nutlinkAddressMetadataHash obj : "metadata_url" Data.Aeson.Types.ToJSON..= nutlinkAddressMetadataUrl obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= nutlinkAddressAddress obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= nutlinkAddressMetadata obj) GHC.Base.<> (("metadata_hash" Data.Aeson.Types.ToJSON..= nutlinkAddressMetadataHash obj) GHC.Base.<> ("metadata_url" Data.Aeson.Types.ToJSON..= nutlinkAddressMetadataUrl obj))))
instance Data.Aeson.Types.FromJSON.FromJSON NutlinkAddress
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "NutlinkAddress" (\obj -> (((GHC.Base.pure NutlinkAddress GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata_hash")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata_url"))
-- | Create a new 'NutlinkAddress' with all required fields.
mkNutlinkAddress :: Data.Text.Internal.Text -- ^ 'nutlinkAddressAddress'
  -> Data.Aeson.Types.Internal.Object -- ^ 'nutlinkAddressMetadata'
  -> Data.Text.Internal.Text -- ^ 'nutlinkAddressMetadataHash'
  -> Data.Text.Internal.Text -- ^ 'nutlinkAddressMetadataUrl'
  -> NutlinkAddress
mkNutlinkAddress nutlinkAddressAddress nutlinkAddressMetadata nutlinkAddressMetadataHash nutlinkAddressMetadataUrl = NutlinkAddress{nutlinkAddressAddress = nutlinkAddressAddress,
                                                                                                                                    nutlinkAddressMetadata = nutlinkAddressMetadata,
                                                                                                                                    nutlinkAddressMetadataHash = nutlinkAddressMetadataHash,
                                                                                                                                    nutlinkAddressMetadataUrl = nutlinkAddressMetadataUrl}
