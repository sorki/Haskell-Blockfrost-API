-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Pool
module BlockfrostAPI.Types.Pool where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified BlockfrostAPI.Common
import BlockfrostAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.pool@ in the specification.
-- 
-- 
data Pool = Pool {
  -- | active_size
  poolActiveSize :: Data.Scientific.Scientific
  -- | active_stake
  , poolActiveStake :: Data.Text.Internal.Text
  -- | blocks_minted: Total minted blocks
  , poolBlocksMinted :: GHC.Integer.Type.Integer
  -- | declared_pledge: Stake pool certificate pledge
  , poolDeclaredPledge :: Data.Text.Internal.Text
  -- | fixed_cost: Fixed tax cost of the stake pool
  , poolFixedCost :: Data.Text.Internal.Text
  -- | hex: Hexadecimal pool ID.
  , poolHex :: Data.Text.Internal.Text
  -- | live_delegators
  , poolLiveDelegators :: Data.Scientific.Scientific
  -- | live_pledge: Stake pool current pledge
  , poolLivePledge :: Data.Text.Internal.Text
  -- | live_saturation
  , poolLiveSaturation :: Data.Scientific.Scientific
  -- | live_size
  , poolLiveSize :: Data.Scientific.Scientific
  -- | live_stake
  , poolLiveStake :: Data.Text.Internal.Text
  -- | margin_cost: Margin tax cost of the stake pool
  , poolMarginCost :: Data.Scientific.Scientific
  -- | owners
  , poolOwners :: ([Data.Text.Internal.Text])
  -- | pool_id: Bech32 pool ID
  , poolPoolId :: Data.Text.Internal.Text
  -- | registration
  , poolRegistration :: ([Data.Text.Internal.Text])
  -- | retirement
  , poolRetirement :: ([Data.Text.Internal.Text])
  -- | reward_account: Bech32 reward account of the stake pool
  , poolRewardAccount :: Data.Text.Internal.Text
  -- | vrf_key: VRF key hash
  , poolVrfKey :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Pool
    where toJSON obj = Data.Aeson.Types.Internal.object ("active_size" Data.Aeson.Types.ToJSON..= poolActiveSize obj : "active_stake" Data.Aeson.Types.ToJSON..= poolActiveStake obj : "blocks_minted" Data.Aeson.Types.ToJSON..= poolBlocksMinted obj : "declared_pledge" Data.Aeson.Types.ToJSON..= poolDeclaredPledge obj : "fixed_cost" Data.Aeson.Types.ToJSON..= poolFixedCost obj : "hex" Data.Aeson.Types.ToJSON..= poolHex obj : "live_delegators" Data.Aeson.Types.ToJSON..= poolLiveDelegators obj : "live_pledge" Data.Aeson.Types.ToJSON..= poolLivePledge obj : "live_saturation" Data.Aeson.Types.ToJSON..= poolLiveSaturation obj : "live_size" Data.Aeson.Types.ToJSON..= poolLiveSize obj : "live_stake" Data.Aeson.Types.ToJSON..= poolLiveStake obj : "margin_cost" Data.Aeson.Types.ToJSON..= poolMarginCost obj : "owners" Data.Aeson.Types.ToJSON..= poolOwners obj : "pool_id" Data.Aeson.Types.ToJSON..= poolPoolId obj : "registration" Data.Aeson.Types.ToJSON..= poolRegistration obj : "retirement" Data.Aeson.Types.ToJSON..= poolRetirement obj : "reward_account" Data.Aeson.Types.ToJSON..= poolRewardAccount obj : "vrf_key" Data.Aeson.Types.ToJSON..= poolVrfKey obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("active_size" Data.Aeson.Types.ToJSON..= poolActiveSize obj) GHC.Base.<> (("active_stake" Data.Aeson.Types.ToJSON..= poolActiveStake obj) GHC.Base.<> (("blocks_minted" Data.Aeson.Types.ToJSON..= poolBlocksMinted obj) GHC.Base.<> (("declared_pledge" Data.Aeson.Types.ToJSON..= poolDeclaredPledge obj) GHC.Base.<> (("fixed_cost" Data.Aeson.Types.ToJSON..= poolFixedCost obj) GHC.Base.<> (("hex" Data.Aeson.Types.ToJSON..= poolHex obj) GHC.Base.<> (("live_delegators" Data.Aeson.Types.ToJSON..= poolLiveDelegators obj) GHC.Base.<> (("live_pledge" Data.Aeson.Types.ToJSON..= poolLivePledge obj) GHC.Base.<> (("live_saturation" Data.Aeson.Types.ToJSON..= poolLiveSaturation obj) GHC.Base.<> (("live_size" Data.Aeson.Types.ToJSON..= poolLiveSize obj) GHC.Base.<> (("live_stake" Data.Aeson.Types.ToJSON..= poolLiveStake obj) GHC.Base.<> (("margin_cost" Data.Aeson.Types.ToJSON..= poolMarginCost obj) GHC.Base.<> (("owners" Data.Aeson.Types.ToJSON..= poolOwners obj) GHC.Base.<> (("pool_id" Data.Aeson.Types.ToJSON..= poolPoolId obj) GHC.Base.<> (("registration" Data.Aeson.Types.ToJSON..= poolRegistration obj) GHC.Base.<> (("retirement" Data.Aeson.Types.ToJSON..= poolRetirement obj) GHC.Base.<> (("reward_account" Data.Aeson.Types.ToJSON..= poolRewardAccount obj) GHC.Base.<> ("vrf_key" Data.Aeson.Types.ToJSON..= poolVrfKey obj))))))))))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON Pool
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Pool" (\obj -> (((((((((((((((((GHC.Base.pure Pool GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active_stake")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "blocks_minted")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "declared_pledge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fixed_cost")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hex")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "live_delegators")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "live_pledge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "live_saturation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "live_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "live_stake")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "margin_cost")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "owners")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pool_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "registration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "retirement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reward_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "vrf_key"))
-- | Create a new 'Pool' with all required fields.
mkPool :: Data.Scientific.Scientific -- ^ 'poolActiveSize'
  -> Data.Text.Internal.Text -- ^ 'poolActiveStake'
  -> GHC.Integer.Type.Integer -- ^ 'poolBlocksMinted'
  -> Data.Text.Internal.Text -- ^ 'poolDeclaredPledge'
  -> Data.Text.Internal.Text -- ^ 'poolFixedCost'
  -> Data.Text.Internal.Text -- ^ 'poolHex'
  -> Data.Scientific.Scientific -- ^ 'poolLiveDelegators'
  -> Data.Text.Internal.Text -- ^ 'poolLivePledge'
  -> Data.Scientific.Scientific -- ^ 'poolLiveSaturation'
  -> Data.Scientific.Scientific -- ^ 'poolLiveSize'
  -> Data.Text.Internal.Text -- ^ 'poolLiveStake'
  -> Data.Scientific.Scientific -- ^ 'poolMarginCost'
  -> [Data.Text.Internal.Text] -- ^ 'poolOwners'
  -> Data.Text.Internal.Text -- ^ 'poolPoolId'
  -> [Data.Text.Internal.Text] -- ^ 'poolRegistration'
  -> [Data.Text.Internal.Text] -- ^ 'poolRetirement'
  -> Data.Text.Internal.Text -- ^ 'poolRewardAccount'
  -> Data.Text.Internal.Text -- ^ 'poolVrfKey'
  -> Pool
mkPool poolActiveSize poolActiveStake poolBlocksMinted poolDeclaredPledge poolFixedCost poolHex poolLiveDelegators poolLivePledge poolLiveSaturation poolLiveSize poolLiveStake poolMarginCost poolOwners poolPoolId poolRegistration poolRetirement poolRewardAccount poolVrfKey = Pool{poolActiveSize = poolActiveSize,
                                                                                                                                                                                                                                                                                         poolActiveStake = poolActiveStake,
                                                                                                                                                                                                                                                                                         poolBlocksMinted = poolBlocksMinted,
                                                                                                                                                                                                                                                                                         poolDeclaredPledge = poolDeclaredPledge,
                                                                                                                                                                                                                                                                                         poolFixedCost = poolFixedCost,
                                                                                                                                                                                                                                                                                         poolHex = poolHex,
                                                                                                                                                                                                                                                                                         poolLiveDelegators = poolLiveDelegators,
                                                                                                                                                                                                                                                                                         poolLivePledge = poolLivePledge,
                                                                                                                                                                                                                                                                                         poolLiveSaturation = poolLiveSaturation,
                                                                                                                                                                                                                                                                                         poolLiveSize = poolLiveSize,
                                                                                                                                                                                                                                                                                         poolLiveStake = poolLiveStake,
                                                                                                                                                                                                                                                                                         poolMarginCost = poolMarginCost,
                                                                                                                                                                                                                                                                                         poolOwners = poolOwners,
                                                                                                                                                                                                                                                                                         poolPoolId = poolPoolId,
                                                                                                                                                                                                                                                                                         poolRegistration = poolRegistration,
                                                                                                                                                                                                                                                                                         poolRetirement = poolRetirement,
                                                                                                                                                                                                                                                                                         poolRewardAccount = poolRewardAccount,
                                                                                                                                                                                                                                                                                         poolVrfKey = poolVrfKey}
