-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postIpfsPinRemove_IPFSPath_
module BlockfrostAPI.Operations.PostIpfsPinRemoveIPFSPath_ where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified BlockfrostAPI.Common
import BlockfrostAPI.Types

-- | > POST /ipfs/pin/remove/{IPFS_path}
-- 
-- Remove pinned objects from local storage
postIpfsPinRemove_IPFSPath_ :: forall m . BlockfrostAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ IPFS_path
  -> BlockfrostAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostIpfsPinRemoveIPFSPathResponse) -- ^ Monadic computation which returns the result of the operation
postIpfsPinRemove_IPFSPath_ iPFSPath = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostIpfsPinRemoveIPFSPathResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody200)
                                                                                                                                                                                           | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse400 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody400)
                                                                                                                                                                                           | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse403 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody403)
                                                                                                                                                                                           | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse404 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody404)
                                                                                                                                                                                           | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 418) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse418 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody418)
                                                                                                                                                                                           | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 429) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse429 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody429)
                                                                                                                                                                                           | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse500 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    PostIpfsPinRemoveIPFSPathResponseBody500)
                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (BlockfrostAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/ipfs/pin/remove/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel iPFSPath)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | Represents a response of the operation 'postIpfsPinRemove_IPFSPath_'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIpfsPinRemoveIPFSPathResponseError' is used.
data PostIpfsPinRemoveIPFSPathResponse =
   PostIpfsPinRemoveIPFSPathResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostIpfsPinRemoveIPFSPathResponse200 PostIpfsPinRemoveIPFSPathResponseBody200 -- ^ Returns the pins removed
  | PostIpfsPinRemoveIPFSPathResponse400 PostIpfsPinRemoveIPFSPathResponseBody400 -- ^ Bad request
  | PostIpfsPinRemoveIPFSPathResponse403 PostIpfsPinRemoveIPFSPathResponseBody403 -- ^ Authentication secret is missing or invalid
  | PostIpfsPinRemoveIPFSPathResponse404 PostIpfsPinRemoveIPFSPathResponseBody404 -- ^ Component not found
  | PostIpfsPinRemoveIPFSPathResponse418 PostIpfsPinRemoveIPFSPathResponseBody418 -- ^ IP has been auto-banned for extensive sending of requests after usage limit has been reached
  | PostIpfsPinRemoveIPFSPathResponse429 PostIpfsPinRemoveIPFSPathResponseBody429 -- ^ Usage limit reached
  | PostIpfsPinRemoveIPFSPathResponse500 PostIpfsPinRemoveIPFSPathResponseBody500 -- ^ Internal Server Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/ipfs\/pin\/remove\/{IPFS_path}.POST.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody200 = PostIpfsPinRemoveIPFSPathResponseBody200 {
  -- | ipfs_hash: IPFS hash of the pinned object
  postIpfsPinRemoveIPFSPathResponseBody200IpfsHash :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object ("ipfs_hash" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody200IpfsHash obj : "state" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "queued|pinned|unpinned|failed|gc" : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("ipfs_hash" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody200IpfsHash obj) GHC.Base.<> ("state" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "queued|pinned|unpinned|failed|gc"))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody200" (\obj -> GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipfs_hash"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody200' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody200 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody200IpfsHash'
  -> PostIpfsPinRemoveIPFSPathResponseBody200
mkPostIpfsPinRemoveIPFSPathResponseBody200 postIpfsPinRemoveIPFSPathResponseBody200IpfsHash = PostIpfsPinRemoveIPFSPathResponseBody200{postIpfsPinRemoveIPFSPathResponseBody200IpfsHash = postIpfsPinRemoveIPFSPathResponseBody200IpfsHash}
-- | Defines the object schema located at @components.responses.bad_request.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody400 = PostIpfsPinRemoveIPFSPathResponseBody400 {
  -- | error
  postIpfsPinRemoveIPFSPathResponseBody400Error :: Data.Text.Internal.Text
  -- | message
  , postIpfsPinRemoveIPFSPathResponseBody400Message :: Data.Text.Internal.Text
  -- | status_code
  , postIpfsPinRemoveIPFSPathResponseBody400StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody400
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody400Error obj : "message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody400Message obj : "status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody400StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody400Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody400Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody400StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody400
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody400" (\obj -> ((GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody400 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody400' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody400 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody400Error'
  -> Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody400Message'
  -> GHC.Integer.Type.Integer -- ^ 'postIpfsPinRemoveIPFSPathResponseBody400StatusCode'
  -> PostIpfsPinRemoveIPFSPathResponseBody400
mkPostIpfsPinRemoveIPFSPathResponseBody400 postIpfsPinRemoveIPFSPathResponseBody400Error postIpfsPinRemoveIPFSPathResponseBody400Message postIpfsPinRemoveIPFSPathResponseBody400StatusCode = PostIpfsPinRemoveIPFSPathResponseBody400{postIpfsPinRemoveIPFSPathResponseBody400Error = postIpfsPinRemoveIPFSPathResponseBody400Error,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody400Message = postIpfsPinRemoveIPFSPathResponseBody400Message,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody400StatusCode = postIpfsPinRemoveIPFSPathResponseBody400StatusCode}
-- | Defines the object schema located at @components.responses.unauthorized_error.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody403 = PostIpfsPinRemoveIPFSPathResponseBody403 {
  -- | error
  postIpfsPinRemoveIPFSPathResponseBody403Error :: Data.Text.Internal.Text
  -- | message
  , postIpfsPinRemoveIPFSPathResponseBody403Message :: Data.Text.Internal.Text
  -- | status_code
  , postIpfsPinRemoveIPFSPathResponseBody403StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody403
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody403Error obj : "message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody403Message obj : "status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody403StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody403Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody403Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody403StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody403
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody403" (\obj -> ((GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody403 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody403' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody403 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody403Error'
  -> Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody403Message'
  -> GHC.Integer.Type.Integer -- ^ 'postIpfsPinRemoveIPFSPathResponseBody403StatusCode'
  -> PostIpfsPinRemoveIPFSPathResponseBody403
mkPostIpfsPinRemoveIPFSPathResponseBody403 postIpfsPinRemoveIPFSPathResponseBody403Error postIpfsPinRemoveIPFSPathResponseBody403Message postIpfsPinRemoveIPFSPathResponseBody403StatusCode = PostIpfsPinRemoveIPFSPathResponseBody403{postIpfsPinRemoveIPFSPathResponseBody403Error = postIpfsPinRemoveIPFSPathResponseBody403Error,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody403Message = postIpfsPinRemoveIPFSPathResponseBody403Message,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody403StatusCode = postIpfsPinRemoveIPFSPathResponseBody403StatusCode}
-- | Defines the object schema located at @components.responses.not_found.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody404 = PostIpfsPinRemoveIPFSPathResponseBody404 {
  -- | error
  postIpfsPinRemoveIPFSPathResponseBody404Error :: Data.Text.Internal.Text
  -- | message
  , postIpfsPinRemoveIPFSPathResponseBody404Message :: Data.Text.Internal.Text
  -- | status_code
  , postIpfsPinRemoveIPFSPathResponseBody404StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody404
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody404Error obj : "message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody404Message obj : "status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody404StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody404Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody404Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody404StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody404
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody404" (\obj -> ((GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody404 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody404' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody404 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody404Error'
  -> Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody404Message'
  -> GHC.Integer.Type.Integer -- ^ 'postIpfsPinRemoveIPFSPathResponseBody404StatusCode'
  -> PostIpfsPinRemoveIPFSPathResponseBody404
mkPostIpfsPinRemoveIPFSPathResponseBody404 postIpfsPinRemoveIPFSPathResponseBody404Error postIpfsPinRemoveIPFSPathResponseBody404Message postIpfsPinRemoveIPFSPathResponseBody404StatusCode = PostIpfsPinRemoveIPFSPathResponseBody404{postIpfsPinRemoveIPFSPathResponseBody404Error = postIpfsPinRemoveIPFSPathResponseBody404Error,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody404Message = postIpfsPinRemoveIPFSPathResponseBody404Message,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody404StatusCode = postIpfsPinRemoveIPFSPathResponseBody404StatusCode}
-- | Defines the object schema located at @components.responses.autobanned.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody418 = PostIpfsPinRemoveIPFSPathResponseBody418 {
  -- | error
  postIpfsPinRemoveIPFSPathResponseBody418Error :: Data.Text.Internal.Text
  -- | message
  , postIpfsPinRemoveIPFSPathResponseBody418Message :: Data.Text.Internal.Text
  -- | status_code
  , postIpfsPinRemoveIPFSPathResponseBody418StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody418
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody418Error obj : "message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody418Message obj : "status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody418StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody418Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody418Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody418StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody418
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody418" (\obj -> ((GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody418 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody418' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody418 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody418Error'
  -> Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody418Message'
  -> GHC.Integer.Type.Integer -- ^ 'postIpfsPinRemoveIPFSPathResponseBody418StatusCode'
  -> PostIpfsPinRemoveIPFSPathResponseBody418
mkPostIpfsPinRemoveIPFSPathResponseBody418 postIpfsPinRemoveIPFSPathResponseBody418Error postIpfsPinRemoveIPFSPathResponseBody418Message postIpfsPinRemoveIPFSPathResponseBody418StatusCode = PostIpfsPinRemoveIPFSPathResponseBody418{postIpfsPinRemoveIPFSPathResponseBody418Error = postIpfsPinRemoveIPFSPathResponseBody418Error,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody418Message = postIpfsPinRemoveIPFSPathResponseBody418Message,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody418StatusCode = postIpfsPinRemoveIPFSPathResponseBody418StatusCode}
-- | Defines the object schema located at @components.responses.overusage_limit.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody429 = PostIpfsPinRemoveIPFSPathResponseBody429 {
  -- | error
  postIpfsPinRemoveIPFSPathResponseBody429Error :: Data.Text.Internal.Text
  -- | message
  , postIpfsPinRemoveIPFSPathResponseBody429Message :: Data.Text.Internal.Text
  -- | status_code
  , postIpfsPinRemoveIPFSPathResponseBody429StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody429
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody429Error obj : "message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody429Message obj : "status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody429StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody429Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody429Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody429StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody429
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody429" (\obj -> ((GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody429 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody429' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody429 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody429Error'
  -> Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody429Message'
  -> GHC.Integer.Type.Integer -- ^ 'postIpfsPinRemoveIPFSPathResponseBody429StatusCode'
  -> PostIpfsPinRemoveIPFSPathResponseBody429
mkPostIpfsPinRemoveIPFSPathResponseBody429 postIpfsPinRemoveIPFSPathResponseBody429Error postIpfsPinRemoveIPFSPathResponseBody429Message postIpfsPinRemoveIPFSPathResponseBody429StatusCode = PostIpfsPinRemoveIPFSPathResponseBody429{postIpfsPinRemoveIPFSPathResponseBody429Error = postIpfsPinRemoveIPFSPathResponseBody429Error,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody429Message = postIpfsPinRemoveIPFSPathResponseBody429Message,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody429StatusCode = postIpfsPinRemoveIPFSPathResponseBody429StatusCode}
-- | Defines the object schema located at @components.responses.internal_server_error.content.application\/json.schema@ in the specification.
-- 
-- 
data PostIpfsPinRemoveIPFSPathResponseBody500 = PostIpfsPinRemoveIPFSPathResponseBody500 {
  -- | error
  postIpfsPinRemoveIPFSPathResponseBody500Error :: Data.Text.Internal.Text
  -- | message
  , postIpfsPinRemoveIPFSPathResponseBody500Message :: Data.Text.Internal.Text
  -- | status_code
  , postIpfsPinRemoveIPFSPathResponseBody500StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIpfsPinRemoveIPFSPathResponseBody500
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody500Error obj : "message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody500Message obj : "status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody500StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody500Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody500Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= postIpfsPinRemoveIPFSPathResponseBody500StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIpfsPinRemoveIPFSPathResponseBody500
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIpfsPinRemoveIPFSPathResponseBody500" (\obj -> ((GHC.Base.pure PostIpfsPinRemoveIPFSPathResponseBody500 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'PostIpfsPinRemoveIPFSPathResponseBody500' with all required fields.
mkPostIpfsPinRemoveIPFSPathResponseBody500 :: Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody500Error'
  -> Data.Text.Internal.Text -- ^ 'postIpfsPinRemoveIPFSPathResponseBody500Message'
  -> GHC.Integer.Type.Integer -- ^ 'postIpfsPinRemoveIPFSPathResponseBody500StatusCode'
  -> PostIpfsPinRemoveIPFSPathResponseBody500
mkPostIpfsPinRemoveIPFSPathResponseBody500 postIpfsPinRemoveIPFSPathResponseBody500Error postIpfsPinRemoveIPFSPathResponseBody500Message postIpfsPinRemoveIPFSPathResponseBody500StatusCode = PostIpfsPinRemoveIPFSPathResponseBody500{postIpfsPinRemoveIPFSPathResponseBody500Error = postIpfsPinRemoveIPFSPathResponseBody500Error,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody500Message = postIpfsPinRemoveIPFSPathResponseBody500Message,
                                                                                                                                                                                                                                       postIpfsPinRemoveIPFSPathResponseBody500StatusCode = postIpfsPinRemoveIPFSPathResponseBody500StatusCode}
-- | > POST /ipfs/pin/remove/{IPFS_path}
-- 
-- The same as 'postIpfsPinRemove_IPFSPath_' but accepts an explicit configuration.
postIpfsPinRemove_IPFSPath_WithConfiguration :: forall m . BlockfrostAPI.Common.MonadHTTP m => BlockfrostAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ IPFS_path
  -> m (Network.HTTP.Client.Types.Response PostIpfsPinRemoveIPFSPathResponse) -- ^ Monadic computation which returns the result of the operation
postIpfsPinRemove_IPFSPath_WithConfiguration config
                                             iPFSPath = GHC.Base.fmap (\response_8 -> GHC.Base.fmap (Data.Either.either PostIpfsPinRemoveIPFSPathResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_9 -> Network.HTTP.Types.Status.statusCode status_9 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     PostIpfsPinRemoveIPFSPathResponseBody200)
                                                                                                                                                                                                            | (\status_10 -> Network.HTTP.Types.Status.statusCode status_10 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse400 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostIpfsPinRemoveIPFSPathResponseBody400)
                                                                                                                                                                                                            | (\status_11 -> Network.HTTP.Types.Status.statusCode status_11 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse403 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostIpfsPinRemoveIPFSPathResponseBody403)
                                                                                                                                                                                                            | (\status_12 -> Network.HTTP.Types.Status.statusCode status_12 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse404 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostIpfsPinRemoveIPFSPathResponseBody404)
                                                                                                                                                                                                            | (\status_13 -> Network.HTTP.Types.Status.statusCode status_13 GHC.Classes.== 418) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse418 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostIpfsPinRemoveIPFSPathResponseBody418)
                                                                                                                                                                                                            | (\status_14 -> Network.HTTP.Types.Status.statusCode status_14 GHC.Classes.== 429) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse429 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostIpfsPinRemoveIPFSPathResponseBody429)
                                                                                                                                                                                                            | (\status_15 -> Network.HTTP.Types.Status.statusCode status_15 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> PostIpfsPinRemoveIPFSPathResponse500 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PostIpfsPinRemoveIPFSPathResponseBody500)
                                                                                                                                                                                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_8) response_8) (BlockfrostAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/ipfs/pin/remove/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel iPFSPath)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | > POST /ipfs/pin/remove/{IPFS_path}
-- 
-- The same as 'postIpfsPinRemove_IPFSPath_' but returns the raw 'Data.ByteString.Char8.ByteString'.
postIpfsPinRemove_IPFSPath_Raw :: forall m . BlockfrostAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ IPFS_path
  -> BlockfrostAPI.Common.StripeT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postIpfsPinRemove_IPFSPath_Raw iPFSPath = GHC.Base.id (BlockfrostAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/ipfs/pin/remove/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel iPFSPath)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | > POST /ipfs/pin/remove/{IPFS_path}
-- 
-- The same as 'postIpfsPinRemove_IPFSPath_' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postIpfsPinRemove_IPFSPath_WithConfigurationRaw :: forall m . BlockfrostAPI.Common.MonadHTTP m => BlockfrostAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ IPFS_path
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
postIpfsPinRemove_IPFSPath_WithConfigurationRaw config
                                                iPFSPath = GHC.Base.id (BlockfrostAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/ipfs/pin/remove/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel iPFSPath)) GHC.Base.++ ""))) GHC.Base.mempty)
