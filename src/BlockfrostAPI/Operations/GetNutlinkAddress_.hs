-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getNutlink_Address_
module BlockfrostAPI.Operations.GetNutlinkAddress_ where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified BlockfrostAPI.Common
import BlockfrostAPI.Types

-- | > GET /nutlink/{address}
-- 
-- List metadata about specific address
getNutlink_Address_ :: forall m . BlockfrostAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ address
  -> BlockfrostAPI.Common.StripeT m (Network.HTTP.Client.Types.Response GetNutlinkAddressResponse) -- ^ Monadic computation which returns the result of the operation
getNutlink_Address_ address = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetNutlinkAddressResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           NutlinkAddress)
                                                                                                                                                                          | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse400 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           GetNutlinkAddressResponseBody400)
                                                                                                                                                                          | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse403 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           GetNutlinkAddressResponseBody403)
                                                                                                                                                                          | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse404 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           GetNutlinkAddressResponseBody404)
                                                                                                                                                                          | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 418) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse418 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           GetNutlinkAddressResponseBody418)
                                                                                                                                                                          | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 429) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse429 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           GetNutlinkAddressResponseBody429)
                                                                                                                                                                          | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse500 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                           GetNutlinkAddressResponseBody500)
                                                                                                                                                                          | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (BlockfrostAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/nutlink/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel address)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | Represents a response of the operation 'getNutlink_Address_'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetNutlinkAddressResponseError' is used.
data GetNutlinkAddressResponse =
   GetNutlinkAddressResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetNutlinkAddressResponse200 NutlinkAddress -- ^ Return the metadata about metadata oracle
  | GetNutlinkAddressResponse400 GetNutlinkAddressResponseBody400 -- ^ Bad request
  | GetNutlinkAddressResponse403 GetNutlinkAddressResponseBody403 -- ^ Authentication secret is missing or invalid
  | GetNutlinkAddressResponse404 GetNutlinkAddressResponseBody404 -- ^ Component not found
  | GetNutlinkAddressResponse418 GetNutlinkAddressResponseBody418 -- ^ IP has been auto-banned for extensive sending of requests after usage limit has been reached
  | GetNutlinkAddressResponse429 GetNutlinkAddressResponseBody429 -- ^ Usage limit reached
  | GetNutlinkAddressResponse500 GetNutlinkAddressResponseBody500 -- ^ Internal Server Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @components.responses.bad_request.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNutlinkAddressResponseBody400 = GetNutlinkAddressResponseBody400 {
  -- | error
  getNutlinkAddressResponseBody400Error :: Data.Text.Internal.Text
  -- | message
  , getNutlinkAddressResponseBody400Message :: Data.Text.Internal.Text
  -- | status_code
  , getNutlinkAddressResponseBody400StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNutlinkAddressResponseBody400
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody400Error obj : "message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody400Message obj : "status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody400StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody400Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody400Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody400StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNutlinkAddressResponseBody400
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNutlinkAddressResponseBody400" (\obj -> ((GHC.Base.pure GetNutlinkAddressResponseBody400 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'GetNutlinkAddressResponseBody400' with all required fields.
mkGetNutlinkAddressResponseBody400 :: Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody400Error'
  -> Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody400Message'
  -> GHC.Integer.Type.Integer -- ^ 'getNutlinkAddressResponseBody400StatusCode'
  -> GetNutlinkAddressResponseBody400
mkGetNutlinkAddressResponseBody400 getNutlinkAddressResponseBody400Error getNutlinkAddressResponseBody400Message getNutlinkAddressResponseBody400StatusCode = GetNutlinkAddressResponseBody400{getNutlinkAddressResponseBody400Error = getNutlinkAddressResponseBody400Error,
                                                                                                                                                                                               getNutlinkAddressResponseBody400Message = getNutlinkAddressResponseBody400Message,
                                                                                                                                                                                               getNutlinkAddressResponseBody400StatusCode = getNutlinkAddressResponseBody400StatusCode}
-- | Defines the object schema located at @components.responses.unauthorized_error.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNutlinkAddressResponseBody403 = GetNutlinkAddressResponseBody403 {
  -- | error
  getNutlinkAddressResponseBody403Error :: Data.Text.Internal.Text
  -- | message
  , getNutlinkAddressResponseBody403Message :: Data.Text.Internal.Text
  -- | status_code
  , getNutlinkAddressResponseBody403StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNutlinkAddressResponseBody403
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody403Error obj : "message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody403Message obj : "status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody403StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody403Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody403Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody403StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNutlinkAddressResponseBody403
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNutlinkAddressResponseBody403" (\obj -> ((GHC.Base.pure GetNutlinkAddressResponseBody403 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'GetNutlinkAddressResponseBody403' with all required fields.
mkGetNutlinkAddressResponseBody403 :: Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody403Error'
  -> Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody403Message'
  -> GHC.Integer.Type.Integer -- ^ 'getNutlinkAddressResponseBody403StatusCode'
  -> GetNutlinkAddressResponseBody403
mkGetNutlinkAddressResponseBody403 getNutlinkAddressResponseBody403Error getNutlinkAddressResponseBody403Message getNutlinkAddressResponseBody403StatusCode = GetNutlinkAddressResponseBody403{getNutlinkAddressResponseBody403Error = getNutlinkAddressResponseBody403Error,
                                                                                                                                                                                               getNutlinkAddressResponseBody403Message = getNutlinkAddressResponseBody403Message,
                                                                                                                                                                                               getNutlinkAddressResponseBody403StatusCode = getNutlinkAddressResponseBody403StatusCode}
-- | Defines the object schema located at @components.responses.not_found.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNutlinkAddressResponseBody404 = GetNutlinkAddressResponseBody404 {
  -- | error
  getNutlinkAddressResponseBody404Error :: Data.Text.Internal.Text
  -- | message
  , getNutlinkAddressResponseBody404Message :: Data.Text.Internal.Text
  -- | status_code
  , getNutlinkAddressResponseBody404StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNutlinkAddressResponseBody404
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody404Error obj : "message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody404Message obj : "status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody404StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody404Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody404Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody404StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNutlinkAddressResponseBody404
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNutlinkAddressResponseBody404" (\obj -> ((GHC.Base.pure GetNutlinkAddressResponseBody404 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'GetNutlinkAddressResponseBody404' with all required fields.
mkGetNutlinkAddressResponseBody404 :: Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody404Error'
  -> Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody404Message'
  -> GHC.Integer.Type.Integer -- ^ 'getNutlinkAddressResponseBody404StatusCode'
  -> GetNutlinkAddressResponseBody404
mkGetNutlinkAddressResponseBody404 getNutlinkAddressResponseBody404Error getNutlinkAddressResponseBody404Message getNutlinkAddressResponseBody404StatusCode = GetNutlinkAddressResponseBody404{getNutlinkAddressResponseBody404Error = getNutlinkAddressResponseBody404Error,
                                                                                                                                                                                               getNutlinkAddressResponseBody404Message = getNutlinkAddressResponseBody404Message,
                                                                                                                                                                                               getNutlinkAddressResponseBody404StatusCode = getNutlinkAddressResponseBody404StatusCode}
-- | Defines the object schema located at @components.responses.autobanned.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNutlinkAddressResponseBody418 = GetNutlinkAddressResponseBody418 {
  -- | error
  getNutlinkAddressResponseBody418Error :: Data.Text.Internal.Text
  -- | message
  , getNutlinkAddressResponseBody418Message :: Data.Text.Internal.Text
  -- | status_code
  , getNutlinkAddressResponseBody418StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNutlinkAddressResponseBody418
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody418Error obj : "message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody418Message obj : "status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody418StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody418Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody418Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody418StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNutlinkAddressResponseBody418
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNutlinkAddressResponseBody418" (\obj -> ((GHC.Base.pure GetNutlinkAddressResponseBody418 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'GetNutlinkAddressResponseBody418' with all required fields.
mkGetNutlinkAddressResponseBody418 :: Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody418Error'
  -> Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody418Message'
  -> GHC.Integer.Type.Integer -- ^ 'getNutlinkAddressResponseBody418StatusCode'
  -> GetNutlinkAddressResponseBody418
mkGetNutlinkAddressResponseBody418 getNutlinkAddressResponseBody418Error getNutlinkAddressResponseBody418Message getNutlinkAddressResponseBody418StatusCode = GetNutlinkAddressResponseBody418{getNutlinkAddressResponseBody418Error = getNutlinkAddressResponseBody418Error,
                                                                                                                                                                                               getNutlinkAddressResponseBody418Message = getNutlinkAddressResponseBody418Message,
                                                                                                                                                                                               getNutlinkAddressResponseBody418StatusCode = getNutlinkAddressResponseBody418StatusCode}
-- | Defines the object schema located at @components.responses.overusage_limit.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNutlinkAddressResponseBody429 = GetNutlinkAddressResponseBody429 {
  -- | error
  getNutlinkAddressResponseBody429Error :: Data.Text.Internal.Text
  -- | message
  , getNutlinkAddressResponseBody429Message :: Data.Text.Internal.Text
  -- | status_code
  , getNutlinkAddressResponseBody429StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNutlinkAddressResponseBody429
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody429Error obj : "message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody429Message obj : "status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody429StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody429Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody429Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody429StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNutlinkAddressResponseBody429
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNutlinkAddressResponseBody429" (\obj -> ((GHC.Base.pure GetNutlinkAddressResponseBody429 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'GetNutlinkAddressResponseBody429' with all required fields.
mkGetNutlinkAddressResponseBody429 :: Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody429Error'
  -> Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody429Message'
  -> GHC.Integer.Type.Integer -- ^ 'getNutlinkAddressResponseBody429StatusCode'
  -> GetNutlinkAddressResponseBody429
mkGetNutlinkAddressResponseBody429 getNutlinkAddressResponseBody429Error getNutlinkAddressResponseBody429Message getNutlinkAddressResponseBody429StatusCode = GetNutlinkAddressResponseBody429{getNutlinkAddressResponseBody429Error = getNutlinkAddressResponseBody429Error,
                                                                                                                                                                                               getNutlinkAddressResponseBody429Message = getNutlinkAddressResponseBody429Message,
                                                                                                                                                                                               getNutlinkAddressResponseBody429StatusCode = getNutlinkAddressResponseBody429StatusCode}
-- | Defines the object schema located at @components.responses.internal_server_error.content.application\/json.schema@ in the specification.
-- 
-- 
data GetNutlinkAddressResponseBody500 = GetNutlinkAddressResponseBody500 {
  -- | error
  getNutlinkAddressResponseBody500Error :: Data.Text.Internal.Text
  -- | message
  , getNutlinkAddressResponseBody500Message :: Data.Text.Internal.Text
  -- | status_code
  , getNutlinkAddressResponseBody500StatusCode :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetNutlinkAddressResponseBody500
    where toJSON obj = Data.Aeson.Types.Internal.object ("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody500Error obj : "message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody500Message obj : "status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody500StatusCode obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("error" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody500Error obj) GHC.Base.<> (("message" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody500Message obj) GHC.Base.<> ("status_code" Data.Aeson.Types.ToJSON..= getNutlinkAddressResponseBody500StatusCode obj)))
instance Data.Aeson.Types.FromJSON.FromJSON GetNutlinkAddressResponseBody500
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetNutlinkAddressResponseBody500" (\obj -> ((GHC.Base.pure GetNutlinkAddressResponseBody500 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_code"))
-- | Create a new 'GetNutlinkAddressResponseBody500' with all required fields.
mkGetNutlinkAddressResponseBody500 :: Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody500Error'
  -> Data.Text.Internal.Text -- ^ 'getNutlinkAddressResponseBody500Message'
  -> GHC.Integer.Type.Integer -- ^ 'getNutlinkAddressResponseBody500StatusCode'
  -> GetNutlinkAddressResponseBody500
mkGetNutlinkAddressResponseBody500 getNutlinkAddressResponseBody500Error getNutlinkAddressResponseBody500Message getNutlinkAddressResponseBody500StatusCode = GetNutlinkAddressResponseBody500{getNutlinkAddressResponseBody500Error = getNutlinkAddressResponseBody500Error,
                                                                                                                                                                                               getNutlinkAddressResponseBody500Message = getNutlinkAddressResponseBody500Message,
                                                                                                                                                                                               getNutlinkAddressResponseBody500StatusCode = getNutlinkAddressResponseBody500StatusCode}
-- | > GET /nutlink/{address}
-- 
-- The same as 'getNutlink_Address_' but accepts an explicit configuration.
getNutlink_Address_WithConfiguration :: forall m . BlockfrostAPI.Common.MonadHTTP m => BlockfrostAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ address
  -> m (Network.HTTP.Client.Types.Response GetNutlinkAddressResponse) -- ^ Monadic computation which returns the result of the operation
getNutlink_Address_WithConfiguration config
                                     address = GHC.Base.fmap (\response_8 -> GHC.Base.fmap (Data.Either.either GetNutlinkAddressResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_9 -> Network.HTTP.Types.Status.statusCode status_9 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                            NutlinkAddress)
                                                                                                                                                                                           | (\status_10 -> Network.HTTP.Types.Status.statusCode status_10 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse400 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetNutlinkAddressResponseBody400)
                                                                                                                                                                                           | (\status_11 -> Network.HTTP.Types.Status.statusCode status_11 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse403 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetNutlinkAddressResponseBody403)
                                                                                                                                                                                           | (\status_12 -> Network.HTTP.Types.Status.statusCode status_12 GHC.Classes.== 404) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse404 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetNutlinkAddressResponseBody404)
                                                                                                                                                                                           | (\status_13 -> Network.HTTP.Types.Status.statusCode status_13 GHC.Classes.== 418) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse418 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetNutlinkAddressResponseBody418)
                                                                                                                                                                                           | (\status_14 -> Network.HTTP.Types.Status.statusCode status_14 GHC.Classes.== 429) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse429 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetNutlinkAddressResponseBody429)
                                                                                                                                                                                           | (\status_15 -> Network.HTTP.Types.Status.statusCode status_15 GHC.Classes.== 500) (Network.HTTP.Client.Types.responseStatus response) -> GetNutlinkAddressResponse500 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetNutlinkAddressResponseBody500)
                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_8) response_8) (BlockfrostAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/nutlink/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel address)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | > GET /nutlink/{address}
-- 
-- The same as 'getNutlink_Address_' but returns the raw 'Data.ByteString.Char8.ByteString'.
getNutlink_Address_Raw :: forall m . BlockfrostAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ address
  -> BlockfrostAPI.Common.StripeT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
getNutlink_Address_Raw address = GHC.Base.id (BlockfrostAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/nutlink/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel address)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | > GET /nutlink/{address}
-- 
-- The same as 'getNutlink_Address_' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getNutlink_Address_WithConfigurationRaw :: forall m . BlockfrostAPI.Common.MonadHTTP m => BlockfrostAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ address
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
getNutlink_Address_WithConfigurationRaw config
                                        address = GHC.Base.id (BlockfrostAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/nutlink/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ BlockfrostAPI.Common.stringifyModel address)) GHC.Base.++ ""))) GHC.Base.mempty)
