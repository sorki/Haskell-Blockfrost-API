-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}

-- | Contains all supported security schemes defined in the specification
module BlockfrostAPI.SecuritySchemes where

import qualified Data.Text.Internal
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Show
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Simple
import qualified BlockfrostAPI.Common

-- | Use this security scheme to use token in HTTP header for authentication. Should be used in a 'BlockfrostAPI.Common.Configuration'.
-- 
-- There are multiple token types available based on network you choose
-- when creating a Blockfrost a project, for a list of token types
-- see [Available networks](\#section\/Available-networks)
-- 
-- @
-- 'BlockfrostAPI.Configuration.defaultConfiguration'
--   { configSecurityScheme = 'apiKeyInHeaderAuthenticationSecurityScheme' "token"
--   }
-- @
apiKeyInHeaderAuthenticationSecurityScheme :: Data.Text.Internal.Text ->
                                              BlockfrostAPI.Common.SecurityScheme
apiKeyInHeaderAuthenticationSecurityScheme = Network.HTTP.Simple.addRequestHeader "project_id" GHC.Base.. BlockfrostAPI.Common.textToByte
